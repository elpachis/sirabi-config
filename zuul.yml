#CLIENTE --> OBJETIVO: que se comporte como una puerta de enlace (Gateway)
server:
  port: ${PORT:8099}
  
#Proyecto cliente que nececita matricularse
eureka:
  client:
    #registerWithEureka: false #que no se vea
    serviceUrl:
      defaultZone: http://localhost:8879/eureka/

#configuramos zuul - mapear los microservicios mediante apodos
zuul:
  host: #aumentar el timeout para la autentificacion (seguridad)
    connect-timeout-millis: 66000000
    socket-timeout-millis: 66000000
  routes:
    uaa: 
      path: /uaa/**                 #acceder a admin - cualquier peticion que tenga '/sirabi-admin/**' lo sustituira por 'http://localhost:8881/'  EJEMPLO
      sensitiveHeaders:             #para seguridad, que va a ser sensitivo a lo que se mande en el header de la peticion (token)
      serviceId: AUTH-SERVER        #el id matriculado por eureka
    sirabi-admin:
      path: /sirabi-admin/**
      sensitiveHeaders:
      serviceId: SIRABI-ADMIN
    sirabi-acto-nacimiento:
      path: /sirabi-acto-nacimiento/**
      sensitiveHeaders:
      serviceId: SIRABI-ACTO-NACIMIENTO
    sirabi-busqueda-individuo:
      path: /sirabi-busqueda-individuo/**
      #sensitiveHeaders:
      serviceId: SIRABI-BUSQUEDA-INDIVIDUO
    sirabi-acta-reportes:
      path: /sirabi-acta-reportes/**
      sensitiveHeaders:
      serviceId: SIRABI-ACTA-REPORTES
      
logging:  
  file: /home/isaac/Documents/logs/${spring.application.name}.log
  level:
    com.netflix.discovery: 'OFF'
    org.springframework.cloud: 'DEBUG'
    org.renapo: 'WARN'
  pattern:
    #console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} | [%thread] | %-5level | %logger{36} - %msg%n"
